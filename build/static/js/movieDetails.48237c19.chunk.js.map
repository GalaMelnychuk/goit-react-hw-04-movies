{"version":3,"sources":["services/moviesAPI.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","screens/notFound/NotFound.js","screens/movieDetails/MovieDetails.module.css","components/addMovieInfo/AddMovieInfo.module.css","screens/addMovieInfo/Cast.js","screens/addMovieInfo/Reviews.js","components/addMovieInfo/AddMovieInfo.js","screens/movieDetails/MovieDetails.js"],"names":["KEY","getMovies","a","axios","get","res","getMovieDetails","movieId","getMovieCast","getMovieReview","getMoviesForInput","query","_arrayLikeToArray","arr","len","length","i","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","Object","from","o","minLen","n","prototype","toString","call","slice","constructor","name","test","TypeError","NotFound","style","textAlign","role","aria-label","module","exports","Cast","state","cast","id","this","props","match","params","moviesApiRequest","then","data","setState","map","actor","key","src","profile_path","alt","width","height","character","Component","reviews","maxId","results","review","author","content","withRouter","location","className","styles","movieInfo","to","pathname","activeClassName","activeLink","path","component","Reviews","MovieDetails","poster","filmName","overview","genres","userScore","handleGoBack","history","push","backdrop_path","original_title","vote_average","movieGenres","item","button","onClick","filmDesc","filmDetl","genr"],"mappings":"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","file":"static/js/movieDetails.48237c19.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst KEY = \"b1e265531c8ed75f20ac8a3df06da0b2\";\n\nexport const getMovies = async () => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n  return res;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return res;\n};\n\nexport const getMovieCast = async movieId => {\n  const res = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}`)\n    return res;\n};\n\nexport const getMovieReview = async movieId => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\nreturn res;\n};\n\nexport const getMoviesForInput = async query => {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return res;\n};\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\n\nconst NotFound = () => (\n  <h1 style={{ textAlign: \"center\" }}>\n    Sorry, page not found\n    <span role=\"img\" aria-label=\"emoji\">\n      ðŸ¤”\n    </span>\n  </h1>\n);\n\nexport default NotFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MovieDetails_button__1ByCh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeLink\":\"AddMovieInfo_activeLink__14HYA\"};","import React, { Component } from \"react\";\nimport * as moviesApiRequest from \"../../services/moviesAPI\";\n\nconst getIdFromProps = props => props.match.params.movieId;\n\nexport default class Cast extends Component {\n  state = {\n    cast: []\n  };\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    moviesApiRequest\n      .getMovieCast(id)\n      .then(({ data }) => this.setState({ cast: [...data.cast] }));\n  }\n\n  render() {\n    return (\n      <>\n        <ul>\n          {this.state.cast.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/original${actor.profile_path}`}\n                alt=\"actor\" width='100' height='100'\n              />\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport * as moviesApiRequest from \"../../services/moviesAPI\";\nimport NotFound from \"../notFound/NotFound\";\n\nconst getIdFromProps = props => props.match.params.movieId;\n\nexport default class Cast extends Component {\n  state = {\n    reviews: []\n  };\n\n  maxId = 700;\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n    moviesApiRequest.getMovieReview(id).then(res => {\n      this.setState({ reviews: res.data.results });\n    });\n  }\n\n  render() {\n    const { reviews } = this.state;\n    return (\n      <>\n        <ul>\n          {reviews.length > 0 ? (\n            reviews.map(review => (\n              <li key={review.id}>\n                <h5>AUTOR: </h5>\n                <p>{review.author}</p>\n                <span>{review.content}</span>\n              </li>\n            ))\n          ) : (\n            <NotFound />\n          )}\n        </ul>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { NavLink, Route, withRouter } from \"react-router-dom\";\nimport styles from \"./AddMovieInfo.module.css\";\nimport Cast from \"../../screens/addMovieInfo/Cast\";\nimport Reviews from \"../../screens/addMovieInfo/Reviews\";\n\nconst AddMovieInfo = ({ id, location }) => {\n  return (\n    <>\n      <div className={styles.movieInfo}>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to={{\n              pathname: `/movies/${id}/cast`,\n              state: {from: location}}} activeClassName={styles.activeLink} >Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to={{\n              pathname: `/movies/${id}/reviews`,\n              state: {from: location}}} activeClassName={styles.activeLink} >Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n      <Route path={`/movies/:movieId/cast`} component={Cast}></Route>\n      <Route path={`/movies/:movieId/reviews`} component={Reviews}></Route>\n    </>\n  );\n};\n\nexport default withRouter(AddMovieInfo);\n","import React, { Component } from \"react\";\nimport * as moviesApiRequest from \"../../services/moviesAPI\";\nimport styles from \"./MovieDetails.module.css\";\nimport AddMovieInfo from \"../../components/addMovieInfo/AddMovieInfo\";\n\nconst getIdFromProps = props => props.match.params.movieId;\n\nexport default class MovieDetails extends Component {\n  state = {\n    poster: \"\",\n    filmName: \"\",\n    overview: \"\",\n    id: \"\",\n    genres: [],\n    userScore: \"\"\n  };\n\n  maxId = 100;\n\n  componentDidMount() {\n    const id = getIdFromProps(this.props);\n\n    moviesApiRequest\n      .getMovieDetails(id)\n      .then(\n        ({\n          data: {\n            backdrop_path,\n            original_title,\n            overview,\n            id,\n            vote_average,\n            genres\n          }\n        }) => {\n          const movieGenres = genres.map(item => {\n            return item.name;\n          });\n          this.setState({\n            poster: backdrop_path,\n            filmName: original_title,\n            overview: overview,\n            id,\n            genres: movieGenres,\n            userScore: vote_average\n          });\n        }\n      );\n  }\n\n  handleGoBack = () => {\n    if(!this.props.location.state){\n      this.props.history.push('/')\n    }\n      this.props.history.push(this.props.location.state.from)\n  }\n\n  render() {\n    const { poster, filmName, overview, id, genres, userScore } = this.state;\n    return (\n      <>\n        <button className={styles.button} onClick = {this.handleGoBack}>GO BACK</button>\n        <div className={styles.filmDesc}>\n          <img\n            src={`https://image.tmdb.org/t/p/original${poster}`}\n            alt=\"img\"\n            height=\"700\"\n            width=\"700\"\n          />\n          <div className={styles.filmDetl}>\n            <h1>{filmName}</h1>\n            <p>User Score: {userScore} %</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <ul>\n              {genres.map(genr => (\n                <li key={this.maxId++}>{genr}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <AddMovieInfo id={id}/>\n      </>\n    );\n  }\n}\n"],"sourceRoot":""}